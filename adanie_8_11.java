import java.util.Scanner;
import static java.lang.Math.*;
import static java.lang.System.*;
public class adanie_8_11 {
    public static void main(String[] args) {
        Scanner R11 = new Scanner(System.in);
        out.println("Введите количество предполагаемых четырехугольников");
        int N = R11.nextInt();
        double A[][] = new double[2][4 * N];
        double S1 = 0;
        double S2 = 0;
        double e = 0;
        double d = 0;
        double B[] = new double[4*N];
        for (int i = 0; i < 4 * N; i++) {
            if (i % 4 == 0) {
                out.println("Введите координаты " + ((i / 4) + 1) + " фигуры");
            }
            A[0][i] = R11.nextDouble();
            A[1][i] = R11.nextDouble();
        }
        for (int i = 0; i < 4 * N-1; i += 4) {
            if ((((A[0][i] == A[0][i + 1]) & (A[0][i] == A[0][i + 2])) || ((A[0][i] == A[0][i + 1]) & (A[0][i] == A[0][i + 3])) || ((A[0][i] == A[0][i + 2]) & (A[0][i] == A[0][i + 3])) || ((A[0][i + 1] == A[0][i + 2]) & (A[0][i + 1] == A[0][i + 3])))
                    || (((A[1][i] == A[1][i + 1]) & (A[1][i] == A[1][i + 2])) || ((A[1][i] == A[1][i + 1]) & (A[1][i] == A[1][i + 3])) || ((A[1][i] == A[1][i + 2]) & (A[1][i] == A[1][i + 3])) || ((A[1][i + 1] == A[1][i + 2]) & (A[1][i + 1] == A[1][i + 3])))) {
                B[i] = 0;
            } else {
                B[i] = 1;
            }
            if(B[i]==0){
                B[i+1]=0;
            }else{
                if (((A[0][i] == A[0][i + 1]) & ((((A[1][i] == A[1][i + 2]) & (A[1][i + 1] == A[1][i + 3]) & (A[0][i + 2] == A[0][i + 3]))) || ((A[1][i] == A[1][i + 3]) & (A[1][i + 1] == A[1][i + 2]) & (A[0][i + 2] == A[0][i + 3]))))
                        || ((A[0][i] == A[0][i + 2]) & ((((A[1][i] == A[1][i + 1]) & (A[1][i + 2] == A[1][i + 3]) & (A[0][i + 1] == A[0][i + 3])) || ((A[1][i] == A[1][i + 3]) & (A[1][i + 1] == A[1][i + 2]) & (A[0][i + 1] == A[0][i + 3])))))
                        || ((A[0][i] == A[0][i + 3]) & ((((A[1][i] == A[1][i + 2]) & (A[1][i + 1] == A[1][i + 3]) & (A[0][i + 2] == A[0][i + 1])) || ((A[1][i] == A[1][i + 1]) & (A[1][i + 2] == A[1][i + 3]) & (A[0][i + 2] == A[0][i + 1])))))) {
                    if (Math.abs(A[0][i] - A[0][i + 1]) == Math.abs(A[1][i] - A[1][i + 3])) {
                        B[i+1] = 2;
                    } else {
                        B[i+1] = 1;
                    }
                } else if ((A[0][i]==A[0][i+1] & A[1][i+2]==A[1][i+3] & A[1][i+2]==(A[1][i]+A[1][i+1])*(0.5))||
                        (A[1][i]==A[1][i+1] & A[0][i+2]==A[0][i+3] & A[0][i+2]==(A[0][i]+A[0][i+1])*(0.5))||
                        (A[0][i]==A[0][i+2] & A[1][i+1]==A[1][i+3] & A[1][i+1]==(A[1][i]+A[1][i+2])*(0.5))||
                        (A[1][i]==A[1][i+2] & A[0][i+1]==A[0][i+3] & A[0][i+1]==(A[0][i]+A[0][i+1])*(0.5))||
                        (A[0][i]==A[0][i+3] & A[1][i+2]==A[1][i+1] & A[1][i+2]==(A[1][i]+A[1][i+3])*(0.5))||
                        (A[1][i]==A[1][i+3] & A[0][i+2]==A[0][i+1] & A[0][i+2]==(A[0][i]+A[0][i+3])*(0.5))){
                    B[i+1]=3;
                } else if ((A[0][i]==A[0][i+1] & A[0][i+2]==A[0][i+3])||
                        (A[1][i]==A[1][i+1] & A[1][i+2]==A[1][i+3])||
                        (A[0][i]==A[0][i+2] & A[0][i+1]==A[0][i+3])||
                        (A[1][i]==A[1][i+2] & A[1][i+1]==A[1][i+3])||
                        (A[0][i]==A[0][i+3] & A[0][i+2]==A[0][i+1])||
                        (A[1][i]==A[1][i+3] & A[1][i+2]==A[1][i+1])) {
                    B[i+1]=4;
                }else{
                    B[i+1]=5;
                }
            }
            if(B[i]==0){
                B[i+2]=0;
            }else{
                B[i+2] = abs((((((A[1][i + 2] - A[1][i]) * (A[0][i + 1] - A[0][i])) - ((A[0][i + 2] - A[0][i]) * (A[1][i + 1] - A[1][i])))+(((A[1][i + 1] - A[1][i+3]) * (A[0][i + 2] - A[0][i+3])) - ((A[0][i + 1] - A[0][i+3]) * (A[1][i + 2] - A[1][i+3])))))*(0.5));
                S1=(((A[1][i + 2] - A[1][i]) * (A[0][i + 1] - A[0][i])) - ((A[0][i + 2] - A[0][i]) * (A[1][i + 1] - A[1][i])))*(0.5);
                S2=(((A[1][i + 1] - A[1][i+3]) * (A[0][i + 2] - A[0][i+3])) - ((A[0][i + 1] - A[0][i+3]) * (A[1][i + 2] - A[1][i+3])))*(0.5);
                d=(sqrt(pow(A[0][i+1]-A[0][i],2)+pow(A[1][i+1]-A[1][i],2)))*(sqrt(pow(A[0][i+2]-A[0][i],2)+pow(A[1][i+2]-A[1][i],2)));
                e=(sqrt(pow(A[0][i+1]-A[0][i+3],2)+pow(A[1][i+1]-A[1][i+3],2)))*(sqrt(pow(A[0][i+2]-A[0][i+3],2)+pow(A[1][i+2]-A[1][i+3],2)));
            }
            if(B[i]==0){
                B[i+3]=0;
            }else if((S1/d)-(S2/e)==0){
                B[i+3]=1;
            }else{
                B[i+3]=-1;
            }
        }
        vivod(B);
    }
    public static void vivod (double array[]){
        for(int i=0;i< array.length;i+=4){
            out.println("Рассмотрим "+((i/4)+1)+" фигуру");
            if(array[i]==0){
                out.println("Это не четырехугольник");
            }else{
                out.println("Это четырехугольник");
            }
            if(array[i+1]==0) {
                out.println("Его нельзя никак классифицировать");
            } else if (array[i+1]==1) {
                out.println("Он является прямоугольником");
            } else if (array[i+1]==2) {
                out.println("Он является квадратом");
            } else if (array[i+1]==3) {
                out.println("Он является ромбом");
            } else if (array[i+1]==4) {
                out.println("Он является трапецией");
            }else{
                out.println("Он является произвольным четырехугольником");
            }
            if(array[i+2]==0){
                out.println("Такая фигура не имеет площади");
            }else{
                out.println("Площадь равна "+array[i+2]);
            }
            if(array[i+3]==0){
                out.println("И невозможно понять, можно ли вписать его в окружность");
            } else if (array[i+3]==1) {
                out.println("Эту фигуру возможно вписать в окружность");
            }else{
                out.println("Эту фигуру нельзя никак вписать в окружность");
            }
            out.println("");
        }
    }
}